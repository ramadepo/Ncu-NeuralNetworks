# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hw3.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1024, 768)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(1024, 768))
        MainWindow.setMaximumSize(QtCore.QSize(1024, 768))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: rgb(55, 55, 55);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textArea_log = QtWidgets.QTextBrowser(self.centralwidget)
        self.textArea_log.setGeometry(QtCore.QRect(0, 660, 1031, 111))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textArea_log.setFont(font)
        self.textArea_log.setStyleSheet("color: rgb(0, 255, 0);")
        self.textArea_log.setReadOnly(True)
        self.textArea_log.setObjectName("textArea_log")
        self.picture_devidedLine = QtWidgets.QGraphicsView(self.centralwidget)
        self.picture_devidedLine.setGeometry(QtCore.QRect(0, 650, 1031, 20))
        self.picture_devidedLine.setStyleSheet("background-color: rgb(162, 162, 162);")
        self.picture_devidedLine.setObjectName("picture_devidedLine")
        self.plot_trainingData = QtWidgets.QWidget(self.centralwidget)
        self.plot_trainingData.setGeometry(QtCore.QRect(180, 60, 661, 571))
        self.plot_trainingData.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.plot_trainingData.setObjectName("plot_trainingData")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(840, 10, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("color: rgb(200,200, 200);\n"
"background-color: rgb(100,100, 100);")
        self.pushButton.setObjectName("pushButton")
        self.progressBar_progress = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar_progress.setGeometry(QtCore.QRect(0, 640, 1071, 23))
        self.progressBar_progress.setProperty("value", 0)
        self.progressBar_progress.setObjectName("progressBar_progress")
        self.label_filename = QtWidgets.QLabel(self.centralwidget)
        self.label_filename.setGeometry(QtCore.QRect(-30, 10, 135, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.label_filename.setFont(font)
        self.label_filename.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_filename.setAutoFillBackground(False)
        self.label_filename.setStyleSheet("color: rgb(162, 162, 162);")
        self.label_filename.setTextFormat(QtCore.Qt.AutoText)
        self.label_filename.setScaledContents(False)
        self.label_filename.setAlignment(QtCore.Qt.AlignCenter)
        self.label_filename.setObjectName("label_filename")
        self.comboBox_filename = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_filename.setGeometry(QtCore.QRect(70, 10, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox_filename.setFont(font)
        self.comboBox_filename.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.comboBox_filename.setStyleSheet("color: rgb(162, 162, 162);\n"
"background-color: rgb(80, 80, 80);")
        self.comboBox_filename.setObjectName("comboBox_filename")
        self.label_convergeCondition = QtWidgets.QLabel(self.centralwidget)
        self.label_convergeCondition.setGeometry(QtCore.QRect(350, 10, 135, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_convergeCondition.setFont(font)
        self.label_convergeCondition.setStyleSheet("color: rgb(162, 162, 162);")
        self.label_convergeCondition.setAlignment(QtCore.Qt.AlignCenter)
        self.label_convergeCondition.setObjectName("label_convergeCondition")
        self.lineEdit_convergeCondition = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_convergeCondition.setGeometry(QtCore.QRect(500, 10, 211, 27))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_convergeCondition.sizePolicy().hasHeightForWidth())
        self.lineEdit_convergeCondition.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_convergeCondition.setFont(font)
        self.lineEdit_convergeCondition.setStyleSheet("color: rgb(162, 162, 162);\n"
"background-color: rgb(80, 80, 80);")
        self.lineEdit_convergeCondition.setObjectName("lineEdit_convergeCondition")
        self.label_hint_convergeCondition = QtWidgets.QLabel(self.centralwidget)
        self.label_hint_convergeCondition.setGeometry(QtCore.QRect(710, 10, 41, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_hint_convergeCondition.setFont(font)
        self.label_hint_convergeCondition.setStyleSheet("color: rgb(162, 162, 162);")
        self.label_hint_convergeCondition.setAlignment(QtCore.Qt.AlignCenter)
        self.label_hint_convergeCondition.setObjectName("label_hint_convergeCondition")
        self.progressBar_progress.raise_()
        self.picture_devidedLine.raise_()
        self.textArea_log.raise_()
        self.plot_trainingData.raise_()
        self.pushButton.raise_()
        self.label_filename.raise_()
        self.comboBox_filename.raise_()
        self.label_convergeCondition.raise_()
        self.lineEdit_convergeCondition.raise_()
        self.label_hint_convergeCondition.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked['bool'].connect(MainWindow.start_calculate)
        self.comboBox_filename.activated['QString'].connect(MainWindow.preview_picture)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "類神經網路 作業1 ── 感知姬"))
        self.textArea_log.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'PMingLiU\';\"><br /></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Start"))
        self.label_filename.setText(_translate("MainWindow", "檔名"))
        self.label_convergeCondition.setText(_translate("MainWindow", "收斂條件(迭代次數)"))
        self.label_hint_convergeCondition.setText(_translate("MainWindow", "次"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

